#user  nobody;
worker_processes  1;
error_log  logs/error.log;

events {
    worker_connections  1024;
}

http {
    include       mime.types;
    default_type  application/octet-stream;
    sendfile        on;
    keepalive_timeout  65;
    #lua 模块
    lua_package_path "/usr/local/openresty/lualib/?.lua;;";
    #c模块     
    lua_package_cpath "/usr/local/openresty/lualib/?.so;;";
    # 共享字典，即本地缓存，名称叫做：item_cache，大小150m。可以在nginx的多个worker之间共享数据，实现缓存功能。
    lua_shared_dict item_cache 150m;

    upstream tomcat-cluster {
        hash $request_uri; #根据请求路径做负载均衡，能做到同一个商品能保存在同一台tomcat的缓存上，同时也能同一台tomcat的缓存上查询到
        server 172.20.10.2:8081;
        server 172.20.10.2:8082;
    }
    server {
        listen       8081;
        server_name  localhost;
         location /item { # 因为item-service中的接口都是/item开头，所以我们监听/item路径，代理到windows上的tomcat服务。
            # 这里是windows电脑的ip和Java服务端口，需要确保windows防火墙处于关闭状态
            proxy_pass http://tomcat-cluster; 
        }

        location ~ /api/item/(\d+) {
            # 默认的响应类型
            default_type  application/json;
            # 响应结果由lua/item.lua文件来决定
            content_by_lua_file  lua/item.lua;
        }
        
        location / {
            root   html;
            index  index.html index.htm;
        }
        
        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   html;
        }
    }
}